{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","NavTop","styled","div","NavItem","Link","props","current","withRouter","pathname","location","className","to","Container","Grid","Section","title","children","Spinner","role","MessageText","color","Message","text","console","log","Imageurl","imageurl","Rating","Title","Poster","id","rating","year","isMovie","require","aria-label","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","type","placeholder","value","onChange","SearchContainer","notFound","event","searchByTerm","target","a","DetailPresenter","result","propTypes","PropTypes","object","string","bool","isRequired","DetailContainer","includes","match","push","history","parseIntId","parseInt","isNaN","RouteWrap","Header","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de7be236.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from 'react';\nimport {Link, withRouter} from \"react-router-dom\";\nimport styled from 'styled-components';\nimport 'css/short.css';\n\nconst NavTop = styled.div`\n    height:52px;\n    top:0px;\n`;\n\nconst NavItem = styled(Link)`\n    border-bottom:4px solid ${props => props.current ? \"#007bff\" : \"transparent\"};\n    height:100%;\n    display:flex;\n    align-items:center;\n    transition:border-bottom .6s ease-in-out;\n`;\n// withRouter: 라우터의 위치를 알고 있다\nexport default withRouter(({location:{pathname}}) => (\n    <header className=\"col-12\">\n        {/* {console.log(props)} */}\n        <NavTop className=\"row w-100 shadow align-items-center position-fixed\"> \n            <NavItem current={pathname === \"/\"} className=\"col-auto\" to=\"/\">\n                Home\n            </NavItem>\n            <NavItem current={pathname === \"/tv\"} className=\"col-auto\" to=\"/tv\">\n                tv\n            </NavItem>\n            <NavItem current={pathname === \"/search\"} className=\"col-auto\" to=\"/search\">\n                search\n            </NavItem>          \n        </NavTop>\n    </header>\n));\n\n// const Header = (props) => (\n//     <header>\n//     </header>\n// )\n// export default withRouter(Header);\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    :last-child{\n        margin-bottom:0px !important;\n    }\n`;\n\nconst Grid = styled.div`\n    display:grid;\n    grid-template-columns: repeat(auto-fill,125px);\n    grid-gap:24px;\n`;\n\nconst Section = ({title, children}) => (\n    <Container className=\"mb-5\">\n        <div className=\"text-white font-weight-bolder mb-2\">\n            {title}\n        </div>\n        <Grid>\n            {children}\n        </Grid>\n    </Container>    \n)\n\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node\n    ])\n  };\nexport default Section;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Spinner = styled.div`\n    border-color:#3758e0;\n    border-right-color: transparent;\n`;\n\n\nexport default () => (\n    <Spinner className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only text-brand-blue\">Loading...</span>\n    </Spinner>\n)","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\n\nconst MessageText = styled.div`\n    color:${props => props.color};\n`;\n\nconst Message  = ({text,color}) => {\n     console.log(color)\n     return(<MessageText color={color}>{text}</MessageText>)\n}\n    \n\nMessage.propTypes = {\n    text:PropTypes.string.isRequired,\n    color:PropTypes.string.isRequired\n}\n\n\nexport default Message;","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nconst Imageurl = styled.div`\n    height:180px;\n    background:url(${props => props.imageurl}) center;\n    background-size:cover;\n    border-radius:4px;\n    z-index:-1;\n    transition:opacity 0.2s ease-in-out;\n`;\nconst Rating = styled.div`\n    position:absolute;\n    right:8px;\n    bottom:8px;\n    opacity:0;\n    transition:   0.2s ease-in-out;\n\n`;\n\nconst Container = styled.div`\n    margin-bottom:16px;\n    position:relative;\n    &:hover{\n        ${Imageurl}{\n           opacity :0.3;\n        }\n        ${Rating}{\n            opacity :1;\n        }\n    }\n`;\n\n\n  \n\n\n\nconst Title = styled.div`\n    line-height:1.5;\n    \n`;\n\nconst Poster = ({id, imageurl, title, rating, year,isMovie=false}) => (\n    <Link to={isMovie? `/movie/${id}` : `/show/${id}`}>\n        <div>\n            <Container className=\"font-12 mb-2\">\n                <Imageurl imageurl={imageurl ? `https://image.tmdb.org/t/p/w300${imageurl}` : require('../assets/noPosterSmall.png')}></Imageurl>\n                <Rating>\n                    <span className=\"mr-1\" rating={rating} role=\"img\" aria-label={rating}>⭐</span><span className=\"text-white d-inlin-block\">{rating}/10</span>\n                </Rating>\n            </Container>\n            <Title className=\"text-white font-14 mb-1\">{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\n            <div className=\"text-gray font-12\">{year}</div>\n        </div>\n    </Link>\n\n)\n\nPoster.propTypes={\n    id:PropTypes.number.isRequired,\n    imageUrl:PropTypes.string,\n    title:PropTypes.string.isRequired,\n    rating:PropTypes.number,\n    year:PropTypes.string,\n    isMovie:PropTypes.bool\n}\n\nexport default Poster;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst HomePresenter = ({nowPlaying,upcoming,popular,error,loading}) =>\nloading ? <Loader/> : \n(\n    <>\n      {nowPlaying && nowPlaying.length > 0 && (\n        <Section title=\"Now Playing\">\n          {nowPlaying.map(movie => \n          (<Poster\n            key={movie.id}\n            id={movie.id}\n            imageurl={movie.poster_path}\n            title={movie.original_title}\n            rating={movie.vote_average}\n            year={movie.release_date.substring(0, 4)}\n            isMovie={true}\n          />)\n          )}\n        </Section>\n      )}  \n      {upcoming && upcoming.length > 0 && (\n        <Section title=\"Upcoming Movies\">\n          {upcoming.map(movie => \n          (<Poster\n            key={movie.id}\n            id={movie.id}\n            imageurl={movie.poster_path}\n            title={movie.original_title}\n            rating={movie.vote_average}\n            year={movie.release_date.substring(0, 4)}\n            isMovie={true}\n          />)\n          )}\n        </Section>\n      )}  \n      {popular && popular.length > 0 && (\n        <Section title=\"Popular\">\n          {popular.map(movie => \n          (<Poster\n            key={movie.id}\n            id={movie.id}\n            imageurl={movie.poster_path}\n            title={movie.original_title}\n            rating={movie.vote_average}\n            year={movie.release_date.substring(0, 4)}\n            isMovie={true}\n          />)\n          )}\n        </Section>\n      )}  \n      {error && <Message text=\"error\" color=\"#f77272\"></Message>}\n    </>\n);\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    popular: PropTypes.array,\n    upcoming: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n  };\n  \n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"5a8ffe25b0883fc6400dbb93bf2a7179\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};","import HomeContainer from './HomeContainer';\n\n\nexport default HomeContainer;\n\n","import React from 'react';\nimport HomePresenter from './HomePresenter';\nimport { moviesApi } from 'api';\n\nexport default class extends React.Component{\n    state={\n        nowPlaying:null,\n        upcoming:null,\n        popular:null,\n        error:null,\n        loading:true\n    }\n    async componentDidMount(){\n        try{\n            const {data:{results : nowPlaying}} = await moviesApi.nowPlaying();\n            const {data:{results : upcoming}} = await moviesApi.upcoming(); \n            const {data:{results : popular}} = await moviesApi.popular();\n            this.setState({\n                nowPlaying,upcoming,popular\n            })\n        }\n        catch{\n            this.setState({\n                error:\"Can't find movies information\"\n            })\n        }\n        finally{\n            this.setState({\n                loading:false\n            })\n        }\n\n    }\n    render(){\n        const {nowPlaying,upcoming,popular,error,loading} = this.state;\n        return(\n            <HomePresenter \n            nowPlaying={nowPlaying}\n            upcoming={upcoming}\n            popular={popular}\n            error={error}\n            loading={loading} />\n        ) \n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import styled from \"styled-components\";\nimport Section from 'Components/Section';\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst TVPresenter = ({topRated,popular,airingToday,error,loading}) => loading ? <Loader/> : (\n    <>\n       {topRated && topRated.length > 0 && (\n        <Section title=\"Top Rated Shows\">\n          {topRated.map(show => \n            (<Poster\n                key={show.id}\n                id={show.id}\n                imageurl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)} \n                />)\n          )}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Shows\">\n          {popular.map(show => \n            (<Poster\n                key={show.id}\n                id={show.id}\n                imageurl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n                />)\n            )}\n        </Section>\n      )}\n      {airingToday && airingToday.length > 0 && (\n        <Section title=\"Airing Today\">\n          {airingToday.map(show => \n            (<Poster\n                key={show.id}\n                id={show.id}\n                imageurl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n                />)\n            )}\n        </Section>\n      )}\n      {error && <Message text=\"error\"></Message>}\n    </>\n);\n\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n  };\n\nexport default TVPresenter;","import TVContainer from './TVContainer';\n\n\nexport default TVContainer;\n\n","import React from 'react';\nimport TVPresenter from './TVPresenter';\nimport { tvApi } from 'api';\n\nexport default class extends React.Component{\n    state={\n        topRated:null,\n        popular:null,\n        airingToday:null,\n        error:null,\n        loading:true\n    }\n    async componentDidMount(){\n        try{\n            const {data:{results:topRated}} =  await tvApi.topRated();\n            console.log(topRated)\n            const {data:{results:popular}} =  await tvApi.popular();\n            const {data:{results:airingToday}} =  await tvApi.airingToday();\n            this.setState({\n                topRated,popular,airingToday\n            })\n        }\n        catch{\n            this.setState({\n                error:\"Can't find TV information\"\n            })\n        }\n        finally{\n            this.setState({\n                loading:false\n            })\n        }\n    }\n    render(){\n        const {topRated,popular,airingToday,error,loading} = this.state;\n        console.log(topRated)\n        return(\n            <TVPresenter \n            topRated={topRated}\n            popular={popular}\n            airingToday={airingToday}\n            error={error}\n            loading={loading} />\n        )\n        \n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from 'styled-components';\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\n\nconst Form = styled.form`\n    width:100%;\n`;\n\nconst Input = styled.input`\n    width:100% !important;\n    all: unset;\n    font-size:24px;\n`;\n\nconst SearchPresenter = ({movieResults,tvResults,searchTerm,error,loading,handleSubmit,updateTerm}) => (\n    <>\n        <Form onSubmit={handleSubmit} className=\"mb-5\">\n            <Input type=\"text\" placeholder=\"Search Movies or TV Shows...\" \n            value={searchTerm} onChange={updateTerm}/>\n        </Form>\n        {loading ? <Loader/> : (\n            <>\n            {movieResults && movieResults.length > 0 && (\n                <Section title=\"Movie Results\">\n                {movieResults.map(movie => (\n                    <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    imageurl={movie.poster_path}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    year={movie.release_date.substring(0, 4)}\n                    isMovie={true}\n                    />\n                ))}\n                </Section>\n            )}\n            {tvResults && tvResults.length > 0 && (\n                <Section title=\"TV Show Results\">\n                {tvResults.map(show => \n                    (<Poster\n                        key={show.id}\n                        id={show.id}\n                        imageurl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date.substring(0, 4)}\n                        />)\n                )}\n                </Section>\n            )}\n            {error && <Message text=\"error\" color=\"#f77272\"></Message>}\n            {movieResults && tvResults && movieResults.length === 0 && tvResults.length === 0 && <Message text=\"Nothing found\" color=\"#f77272\"></Message>}\n            </>\n        )}\n    </>\n);\n\n\nSearchPresenter.propTypes={\n    movieResults:PropTypes.array,\n    tvResults:PropTypes.array,\n    searchTerm:PropTypes.string,\n    error:PropTypes.string,\n    loading:PropTypes.bool.isRequired,\n    handleSubmit:PropTypes.func.isRequired,\n    updateTerm:PropTypes.func.isRequired,\n}\n\nexport default SearchPresenter;","import SearchContainer from './SearchContainer';\n\n\nexport default SearchContainer;\n\n","import React from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { tvApi, moviesApi } from '../../api';\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: '',\n        error: null,\n        notFound: null,\n        loading: false\n    };\n    componentDidMount(){\n        this.handleSubmit();\n    }\n    handleSubmit = event => {\n        // event.preventDefault();\n        const { searchTerm } = this.state;\n        if (searchTerm !== \"\") {\n          this.searchByTerm();\n        }\n      };\n    \n      updateTerm = event => {\n        const {\n          target: { value }\n        } = event;\n        this.setState({\n          searchTerm: value\n        });\n      };\n    searchByTerm = async() => {\n        const {searchTerm} = this.state;\n        try{\n            this.setState({\n                loading: true\n            })\n            const {data:{results:movieResults}} = await moviesApi.search(searchTerm);\n            const {data:{results:tvResults}} = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,tvResults\n            })\n        }catch{\n            this.setState({\n                error:\"Can't find results \"\n            })\n        }\n        finally{\n            this.setState({\n                loading:false\n            })\n        }\n    };\n    render() {\n        const {movieResults,tvResults,searchTerm,error,loading} = this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                error={error}\n                loading={loading} \n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        )\n\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst DetailPresenter = ({result, error, loading}) => null;\n\n\nDetailPresenter.propTypes={\n    result:PropTypes.object,\n    error:PropTypes.string,\n    loading:PropTypes.bool.isRequired\n}\n\nexport default DetailPresenter;","import DetailContainer from './DetailContainer';\n\n\nexport default DetailContainer;\n\n","import DetailPresenter from './DetailPresenter';\nimport { moviesApi, tvApi } from '../../api';\nimport React from 'react';\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const { location: { pathname } } = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        }\n    }\n\n    async componentDidMount() {\n        const { match: { params: { id } }, history: { push } } = this.props;\n        const parseIntId = parseInt(id);\n        const { isMovie } = this.state;\n        if (isNaN(parseIntId)) {\n            push(\"/\");\n        }\n        let result = null;\n        try {\n\n            if (isMovie) {\n                ({ data: result } = await moviesApi.movieDetail(parseIntId))\n            } else {\n                ({ data: result } = await tvApi.showDetail(parseIntId))\n            }\n            console.log(result)\n        } catch{\n            this.setState({\n                error: \"Can't not find result\"\n            })\n        } finally {\n            this.setState({\n                loading: false, result\n            })\n        }\n\n\n    }\n\n    render() {\n        console.log(this.props)\n        const { result, error, loading } = this.state;\n        return (\n            <DetailPresenter result={result} error={error} loading={loading} />\n        )\n\n    }\n}","import React from 'react';\nimport {HashRouter as Router, Route , Redirect, Switch} from \"react-router-dom\";\n//웹사이트느낌\n// import {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Header from 'Components/Header';\nimport Home from 'Routes/Home';\nimport TV from 'Routes/TV';\nimport Search from 'Routes/Search';\nimport Detail from 'Routes/Detail';\n\nimport styled from 'styled-components';\n\nconst RouteWrap = styled.div`\n    margin-top:52px;\n    padding:24px;\n`;\n\n// 주소로 콤포넌트를 부른다\nexport default () => (\n    <Router>\n        <>\n        <Header/>\n        <Switch>\n            <RouteWrap>\n                <Route path=\"/\" exact component={Home}></Route>\n                <Route path=\"/tv\" exact component={TV}></Route>\n                {/* <Route path=\"/tv/popular\" render={() => <h1>popular</h1>}></Route> */}\n                <Route path=\"/search\" component={Search}></Route>\n                <Route path=\"/movie/:id\" component={Detail}></Route>\n                <Route path=\"/show/:id\" component={Detail}></Route>\n            </RouteWrap>\n            <Redirect from=\"*\" to=\"/\"/>\n       </Switch>\n        </>\n    </ Router>\n)","import {createGlobalStyle} from \"styled-components\";\nimport reset from \"styled-reset\";\n\n// export default() => createGlobalStyle`\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none !important;\n    }\n    *{\n        box-sizing:border-box;\n    }\n`;\n\nexport default globalStyles;","import React,{Component} from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from 'Components/GlobalStyles';\n\n\n\n\nexport default class App extends Component{\n  render(){\n    return (\n      <>\n        <Router/>\n        <GlobalStyles/>\n      </>\n    );    \n  }\n} ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport 'css/styles.css';\nimport './api'\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}